{"version":3,"sources":["kisspng-portable-network-graphics-computer-icons-image-vec-5c1627d8cce628.9645871715449558648393.png","redux/features/patients.js","components/Header/Header.js","components/Preloader/preloader.js","redux/features/statuses.js","components/Main/container/Patients.js","components/Main/container/AboutUs.js","components/Main/container/Admin.js","components/Main/container/Status.jsx","redux/features/comments.js","components/Main/container/PatchComment.jsx","components/Main/container/PatientId.jsx","components/Main/container/FilterPatient.jsx","components/Main/Main.js","components/Footer/Footer.js","components/App.js","redux/configureStore.js","index.js"],"names":["initialState","items","loading","filter","loadPatients","dispatch","a","type","fetch","response","json","payload","useStyles","makeStyles","theme","root","flexGrow","navbar","width","logo","height","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","active","fontSize","Header","props","useDispatch","classes","useSelector","state","patients","useState","opened","setOpened","pathname","useLocation","isActive","pn","AppBar","Container","fixed","Toolbar","Typography","className","alt","src","InputBase","value","placeholder","input","onChange","e","target","to","onClick","Preloader","loadStatus","main","margin","img","Patients","status","statuses","patient","name","toLowerCase","indexOf","useEffect","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","item","index","console","log","element","find","stat","_id","lastComment","scope","Avatar","pathToImage","dayjs","updatedAt","format","comments","length","title","marginTop","background","paperGrid","text","secondary","display","justifyContent","paperContact","lineHeight","textAlign","divContact","AboutUs","Grid","container","xs","paper","addLogo","Admin","setTitle","image","setImage","React","open","setOpen","handleClose","handleDelete","id","method","deletePatient","Fab","variant","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","fullWidth","DialogActions","Button","data","headers","body","JSON","stringify","window","location","reload","PropTypes","Status","setColor","bgColor","then","form","flexDirection","formControl","minWidth","formControlLabel","dialogContent","CommentEdit","setStatus","comment","setComment","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","labelId","SelectProps","native","disabled","selected","divTable","alignItems","divTextFieldInput","inputComment","buttonAdd","PatientId","useParams","setStat","handlePostComment","Accept","postComment","loadPatientId","loadComment","inputMode","select","helperText","elem","FilterPatient","Main","exact","path","exaxt","Footer","App","logger","createLogger","diff","collapsed","store","createStore","combineReducers","action","deleting","user","editing","report","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9970ffc9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kisspng-portable-network-graphics-computer-icons-image-vec-5c1627d8cce628.9645871715449558648393.9a7b993b.png\";","const initialState = {\n  items: [],\n  loading: true,\n  filter: ''\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"patients/load/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"patients/load/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      };\n\n    case \"patient/delete/pending\":\n      return {\n        ...state,\n        deleting: true,\n      };\n\n    case \"patient/delete/fulfilled\":\n      return {\n        ...state,\n        deleting: false,\n        items: state.items.filter((user) => user._id !== action.payload),\n      };\n\n    case \"patient/create/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"patient/create/fulfilled\":\n      return {\n        ...state,\n        loading: true,\n        items: action.payload,\n      };\n\n    case 'patient/filter/fulfilled':\n      return {\n        ...state,\n        filter: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n\n\nexport const postPatient = (data) => {\n  return async (dispatch) => {\n    dispatch({ type: \"patient/create/pending\" });\n    const response = await fetch(\"/api/patient\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: data.title,\n        pathToImage: data.image\n      }),\n    });\n    const json = await response.json();\n    dispatch({\n      type: \"patient/create/fulfilled\",\n      payload: json,\n    });\n    window.location.reload();\n  };\n};\n\nexport const loadPatients = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"patients/load/pending\" });\n\n    const response = await fetch(\"/patients\");\n    const json = await response.json();\n\n    dispatch({\n      type: \"patients/load/fulfilled\",\n      payload: json,\n    });\n  };\n};\n\nexport const deletePatient = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: \"patient/delete/pending\" });\n\n    await fetch(`/api/patient/${id}`, {\n      method: \"DELETE\",\n    });\n    dispatch({ type: \"patient/delete/fulfilled\", payload: id });\n  };\n};\n\nexport const loadPatientId = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: \"patients/load/pending\" });\n\n    const response = await fetch(`/api/patient/${id}`);\n    const json = await response.json();\n\n    dispatch({ type: \"patients/load/fulfilled\", payload: [json] });\n  };\n};\n\n\nexport const setFilterText = text => {\n  return {\n    type: 'patient/filter/fulfilled',\n    payload: text\n  }\n}\n\n","import React, { useState } from \"react\";\nimport { AppBar, Container, fade, InputBase, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../../kisspng-portable-network-graphics-computer-icons-image-vec-5c1627d8cce628.9645871715449558648393.png\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { setFilterText } from '../../redux/features/patients';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: \"1\",\n  },\n\n  navbar: {\n    flexGrow: \"2\",\n    width: 100,\n  },\n  logo: {\n    flexGrow: 2,\n    height: 50,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    display: 'contents'\n  },\n  inputRoot: {\n    color: \"white\",\n  },\n    inputInput: {\n      borderRadius: 'solid' ,\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: 'calc(1em + ${theme.spacing(4)}px)',\n  transition: theme.transitions.create(\"width\"),\n  width: \"100%\",\n  [theme.breakpoints.up(\"md\")]: {\n  width: \"20ch\",\n},\n},\n  active: {\n    fontSize: \"20px\",\n    color: \"white\",\n  },\n}));\n\n\nfunction Header(props) {\n   const dispatch = useDispatch()\n  const classes = useStyles();\n  const filter = useSelector(state => state.patients.filter)\n  const [opened, setOpened] = useState(false);\n  const { pathname } = useLocation()\n\n  const isActive = (pn) => {\n    if (pn === pathname) {\n      return classes.active;\n    }\n  };\n\n  const openStatus = () => {\n    if (opened === false) {\n      return setOpened(true);\n    }\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container fixed>\n        <Toolbar>\n          <Typography className={classes.navbar}>\n            <img className={classes.logo} alt=\"logo\" src={logo} />\n          </Typography>\n          <div className={classes.search}>\n            <div >\n              <SearchIcon />\n            </div>\n            <InputBase\n              value={filter}\n              placeholder=\"Поиск объектов…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              onChange={(e) => dispatch(setFilterText(e.target.value))}\n            />\n          </div>\n          <Typography className={classes.navbar}>\n            <NavLink className={isActive(\"/\")} to=\"/\">\n              Главная\n            </NavLink>\n          </Typography>\n          <Typography className={classes.navbar}>\n            <NavLink className={isActive(\"/admin\")}  to=\"/admin\" onClick={openStatus}>\n              Админка\n            </NavLink>\n          </Typography>\n\n          {opened === true ? (\n            <Typography className={classes.navbar}>\n              <NavLink className={isActive(\"/status\")} to=\"/status\">Статус</NavLink>\n            </Typography>\n          ) : null}\n\n          <Typography className={classes.navbar}>\n            <NavLink className={isActive(\"/AboutUS\")} to=\"/AboutUS\">О нас</NavLink>\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\n\r\nfunction Preloader(props) {\r\n  return (\r\n    <div>идет загрузка..</div>\r\n  );\r\n}\r\n\r\nexport default Preloader;","const initialState = {\r\n  items: [],\r\n  loading: true,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case \"status/load/pending\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case \"status/load/fulfilled\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload\r\n      }\r\n\r\n    case \"status/create/pending\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case \"status/create/fulfilled\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const loadStatus = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"status/load/pending\" });\r\n\r\n    const response = await fetch(\"/api/status\");\r\n    const json = await response.json();\r\n    dispatch({\r\n      type: \"status/load/fulfilled\",\r\n      payload: json,\r\n    });\r\n  };\r\n};\r\n\r\nexport const postStatus = (data) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"status/create/pending\" });\r\n    const response = await fetch(\"/api/status\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: data.title,\r\n        color: data.color\r\n      }),\r\n    });\r\n    const json = await response.json();\r\n    dispatch({\r\n      type: \"status/create/fulfilled\",\r\n      payload: json,\r\n    });\r\n    // window.location.reload();\r\n  };\r\n};","import React, { useEffect } from \"react\";\nimport {\n  Avatar,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadPatients } from \"../../../redux/features/patients\";\nimport Preloader from \"../../Preloader/preloader\";\nimport dayjs from \"dayjs\";\nimport { NavLink } from \"react-router-dom\";\nimport { BsSquareFill } from \"react-icons/all\";\nimport { loadStatus } from \"../../../redux/features/statuses\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: 800,\n    margin: \"auto\",\n  },\n\n  img: {\n    width: 70,\n    height: 50,\n    borderRadius: 100,\n    // border: 3, solid, green,\n  },\n}));\n\nfunction Patients() {\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state) => state.patients.loading);\n  const status = useSelector((state) => state.statuses.items);\n  const patients = useSelector((state) => {\n    const { patients } = state;\n\n    if(patients.filter === '') {\n      return patients.items;\n    }\n\n    return patients.items.filter(patient => {\n      return patient.name.toLowerCase().indexOf(patients.filter.toLowerCase()) !== -1\n    })\n  });\n\n\n\n  useEffect(() => {\n    dispatch(loadStatus());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(loadPatients());\n  }, [dispatch]);\n\n  const classes = useStyles();\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  return (\n    <main className={classes.main}>\n      <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell> </TableCell>\n              <TableCell align=\"right\">ФИО</TableCell>\n              <TableCell align=\"right\">Последнее изменение</TableCell>\n              <TableCell align=\"right\">Статус</TableCell>\n              <TableCell align=\"right\">Количество записей</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patients.map((item,index) => {\n              console.log(patients)\n              const element = status.find(\n                (stat) => stat._id === item.lastComment?.status\n              );\n              return (\n                <TableRow key={item._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                   <Avatar>\n                     <img\n                       className={classes.img}\n                       src={`${item.pathToImage}`}\n                       alt=\"logo\"\n                     />\n                   </Avatar>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <NavLink to={`/patient/${item._id}`}>{item.name}</NavLink>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {dayjs(patients[index].lastComment?.updatedAt).format(\n                      \"DD.MM.YYYY HH:mm\"\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {patients[index].comments?.length > 0 ? (<div>\n                      <BsSquareFill color ={element?.color} />\n                      {element?.title}\n                    </div>) : 'нет заметок'}\n\n                  </TableCell>\n                  <TableCell align=\"right\">{item.comments?.length}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </main>\n  );\n}\n\nexport default Patients;\n","import React from 'react';\nimport { Container, Grid, makeStyles, Paper } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Preloader from '../../Preloader/preloader';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginTop: 100,\n    margin: \"auto\",\n    background:\n      \"linear-gradient(90deg, rgba(9, 149, 200, 1) 0%, rgba(9,120,180,1) 100%)\",\n    borderRadius: 4,\n  },\n\n  paperGrid: {\n    marginTop: 10,\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  paperContact: {\n    height: 60,\n    lineHeight: 4,\n    backgroundColor: \"gray\",\n    textAlign: \"center\",\n  },\n  divContact: {\n    width: 300,\n  },\n}));\n\n\n\n\nfunction AboutUs() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.paperContact}>\n        <div className={classes.main}>КОНТАКТЫ</div>\n      </Paper>\n      <Paper className={classes.paperGrid}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <div className={classes.divContact}>\n              Адрес: 125284, Москва, 2-й Боткинский проезд, дом 5, корпус 5\n            </div>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <div className={classes.divContact}>\n              Время работы: Стационар: круглосуточно. Отделение амбулаторного\n              приема: Пн.-Пт.: 8:00-16:00.\n            </div>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <div className={classes.divContact}>\n              Телефон: Приемное отделение стационара: +7 (495) 945-79-82.\n              Отделение амбулаторного приема: +7 (495) 653-14-57. Электронная\n              почта: main@medin.ru\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default AboutUs;","import React, { useEffect, useState } from \"react\";\nimport {\n  Avatar,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle, Fab,\n  makeStyles, Table, TableBody,\n  TableCell, TableContainer, TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deletePatient,\n  loadPatients,\n  postPatient,\n} from \"../../../redux/features/patients\";\nimport Preloader from \"../../Preloader/preloader\";\nimport { RiPlayListAddFill } from \"react-icons/all\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 100,\n    width: 800,\n    margin: \"auto\",\n  },\n  img: {\n    width: 70,\n    height: 50,\n    borderRadius: 100,\n    // border: 3, solid, green,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  addLogo: {\n    fontSize: 40,\n  },\n}));\n\nfunction Admin(props) {\n  const dispatch = useDispatch();\n\n  const patients = useSelector((state) => state.patients.items);\n  const loading = useSelector((state) => state.patients.loading);\n\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(loadPatients());\n  }, [dispatch]);\n\n  const classes = useStyles();\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  const handleDelete = (id) => {\n    dispatch(deletePatient(id));\n  };\n\n  const handleAddTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleAddImage = (e) => {\n    setImage(e.target.value);\n  };\n\n  const handlePostPatient = () => {\n    dispatch(postPatient({ title: title, image: image }));\n  };\n\n  return (\n    <div className={classes.container}>\n      <Container className={classes.paper}>\n        <grid container spacing={6}>\n          <h3>Админка</h3>\n        </grid>\n        <grid container spacing={6} className={classes.addLogo}>\n          <Fab variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            <RiPlayListAddFill />\n          </Fab>\n        </grid>\n      </Container>\n\n      <TableContainer component={classes.paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableBody>\n            {patients.map((item) => {\n              return (\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Avatar>\n                      <img\n                        className={classes.img}\n                        src={`${item.pathToImage}`}\n                        alt=\"logo\"\n                      />\n                    </Avatar>\n                  </TableCell>\n                  <TableCell align=\"right\">{item.name}</TableCell>\n                  <TableCell>\n                    <button onClick={() => handleDelete(item._id)}>\n                      удалить\n                    </button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Новое обращение</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Ведите имя и путь к изображению</DialogContentText>\n          <TextField\n            value={title}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"\"\n            type=\"text\"\n            fullWidth\n            onChange={handleAddTitle}\n          />\n          <TextField\n            value={image}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"\"\n            type=\"text\"\n            fullWidth\n            onChange={handleAddImage}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Закрыть\n          </Button>\n          <Button onClick={handlePostPatient} color=\"primary\">\n            Добавить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Admin;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab, Grid,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { RiPlayListAddFill } from \"react-icons/all\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadStatus, postStatus } from \"../../../redux/features/statuses\";\nimport Preloader from \"../../Preloader/preloader\"\nimport * as PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 100,\n    width: 800,\n    margin: \"auto\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  addLogo: {\n    fontSize: 40,\n  },\n}));\n\nfunction Gr(props) {\n  return null;\n}\n\nGr.propTypes = {\n  spacing: PropTypes.number,\n  container: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nfunction Status(props) {\n  const classes = useStyles();\n  const statuses = useSelector((state) => state.statuses.items);\n  const loading = useSelector((state) => state.statuses.loading);\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState([]);\n  const [color, setColor] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(loadStatus());\n  }, [dispatch]);\n\n  const handleAddTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleAddImage = (e) => {\n    setColor(e.target.value);\n  };\n\n  const handlePostPatient = () => {\n    dispatch(postStatus({ title, color })).then(() => {\n      handleClose();\n    });\n  };\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className={classes.container}>\n      <Container className={classes.paper}>\n        <div container spacing={6}>\n          <h3>Статусы</h3>\n        </div>\n        <div container spacing={6} className={classes.addLogo}>\n          <Fab variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            <RiPlayListAddFill />\n          </Fab>\n        </div>\n      </Container>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Статус</TableCell>\n              <TableCell>Цвет статуса</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {statuses.map((item) => {\n              return (\n                <TableRow>\n                  <TableCell>{item.title}</TableCell>\n                  <TableCell bgColor={item?.color}>{item.color}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Новое обращение</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Ведите статус и цвет статуса в формате #F1F2F3\n          </DialogContentText>\n          <TextField\n            value={title}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"\"\n            type=\"text\"\n            fullWidth\n            onChange={handleAddTitle}\n          />\n          <TextField\n            value={color}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"\"\n            type=\"text\"\n            fullWidth\n            onChange={handleAddImage}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Закрыть\n          </Button>\n          <Button onClick={handlePostPatient} color=\"primary\">\n            Добавить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Status;\n","const initialState = {\n  items: [],\n  loading: true,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"comment/load/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"comment/load/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      };\n\n    case \"comment/post/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"comment/post/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        items: [...state.items, action.payload],\n      };\n\n    case \"comment/edit/pending\":\n      return {\n        ...state,\n        editing: true,\n      };\n    case \"comment/edit/fulfilled\":\n      return {\n        ...state,\n        editing: false,\n        items: state.items.map((report) => {\n          if (report.id === action.payload.id) {\n            return {\n              ...report,\n              ...action.payload.data,\n            };\n          }\n          return report;\n        }),\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const loadComment = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: \"comment/load/pending\" });\n\n    const response = await fetch(\n      `/api/patient/${id}/comments`\n    );\n    const json = await response.json();\n\n    dispatch({\n      type: \"comment/load/fulfilled\",\n      payload: json,\n    });\n  };\n};\n\nexport const postComment = (id, comment) => {\n  return async (dispatch) => {\n    dispatch({ type: \"comment/post/pending\" });\n    const response = await fetch(\n      `/api/patient/${id}/comments`,\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          text: comment.comment,\n          status: comment.stat,\n        }),\n      }\n    );\n    const json = await response.json();\n    dispatch({\n      type: \"comment/post/fulfilled\",\n      payload: json,\n    });\n  };\n};\n\nexport const editReport = (id, data) => {\n  return async (dispatch) => {\n    dispatch({ type: \"comment/edit/pending\" });\n\n    await fetch(`/api/comment/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        text: data.comment,\n        status: data.status,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n    dispatch({ type: \"comment/edit/fulfilled\", payload: { id, data } });\n    window.location.reload()\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TextField } from \"@material-ui/core\";\nimport { loadStatus } from \"../../../redux/features/statuses\";\nimport { editReport } from \"../../../redux/features/comments\";\nimport Preloader from \"../../Preloader/preloader\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    width: \"fit-content\",\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n\n  dialogContent: {\n    display: \"flex\",\n  },\n}));\n\nexport default function CommentEdit({ comments }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [status, setStatus] = useState(comments.status);\n  const [fullWidth] = React.useState(true);\n  const statuses = useSelector((state) => state.statuses.items);\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState(comments.text);\n  const loading = useSelector((state) => state.comments.loading);\n\n  useEffect(() => {\n    dispatch(loadStatus());\n  }, [dispatch]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const handleMaxWidthChange = (event) => {\n  //   setMaxWidth(event.target.value);\n  // };\n  //\n  // const handleFullWidthChange = (event) => {\n  //   setFullWidth(event.target.checked);\n  // };\n\n  const handleChangeReport = (e) => {\n    setComment(e.target.value);\n  };\n\n  const handleChangeStatus = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const handleEditComment = () => {\n    dispatch(editReport(comments._id, { comment, status })).then(() => {\n      handleClose();\n    });\n  };\n\n  if (loading) {\n    return <Preloader />;\n  }\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Изменить\n      </Button>\n      <Dialog\n        fullWidth={fullWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">\n          Изменить заметки к пациенту\n        </DialogTitle>\n        <DialogContent className={classes.dialogContent}>\n          <TextField\n            label=\"Комментарий\"\n            variant=\"outlined\"\n            value={comment}\n            name=\"text\"\n            onChange={handleChangeReport}\n          />\n          <form className={classes.form} noValidate>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"max-width\">Статусы</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={status}\n                onChange={handleChangeStatus}\n                SelectProps={{\n                  native: true,\n                }}\n              >\n                <option disabled selected>\n                  Выберите статус\n                </option>\n                {statuses.map((item) => {\n                  return (\n                    <option key={item._id} value={item._id}>\n                      {item.title}\n                    </option>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </form>\n          <Button onClick={handleEditComment}>Изменить</Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadPatientId } from \"../../../redux/features/patients\";\nimport Preloader from \"../../Preloader/preloader\";\nimport { loadComment, postComment } from \"../../../redux/features/comments\";\nimport { loadStatus } from \"../../../redux/features/statuses\";\nimport dayjs from \"dayjs\";\nimport PatchComment from './PatchComment';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginTop: 100,\n    margin: \"auto\",\n    width: 800,\n  },\n\n  divTable: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n\n  divTextFieldInput: {\n    marginTop: 30,\n    display: 'flex',\n    justifyContent: 'space-between'\n\n  },\n\n  inputComment: {\n    width: 400\n  },\n\n  buttonAdd: {\n    marginLeft: 10\n  }\n}));\n\nfunction PatientId() {\n  const classes = useStyles();\n\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n\n  const patients = useSelector((state) => {\n    return state.patients.items.find((item) => item._id === id);\n  });\n\n  const status = useSelector((state) => state.statuses.items);\n  const comments = useSelector((state) => state.comments.items);\n  const loading = useSelector((state) => state.comments.loading);\n\n  const [comment, setComment] = useState(\"\");\n  const [stat, setStat] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const handlePostComment = (id) => {\n    if (comment.length < 6 || stat.length === 0){\n      return null\n    }else {\n      return  dispatch(postComment(id, { comment: comment, stat: stat }));\n    }\n\n  };\n\n  useEffect(() => {\n    dispatch(loadPatientId(id));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(loadComment(id));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(loadStatus());\n  }, [dispatch]);\n\n  const handleChangeComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  const handleChangeStatus = (e) => {\n    setStat(e.target.value);\n  };\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  return (\n    <main className={classes.main}>\n      <div>Все записи: {patients.name}</div>\n      <div><img src={patients.pathToImage}/></div>\n      <div className={classes.divTextFieldInput}>\n        <div>\n          <TextField\n            className={classes.inputComment}\n            id=\"outlined-basic\"\n            label=\"Введите комментарий\"\n            value={comment}\n            variant=\"outlined\"\n            inputMode={\"text\"}\n            onChange={handleChangeComment}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"outlined-select-currency-native\"\n            select\n            SelectProps={{\n              native: true,\n            }}\n            helperText=\"Выберите статус\"\n            variant=\"outlined\"\n            onChange={handleChangeStatus}\n          >\n            <option disabled selected>Выберите статус</option>\n            {status.map((item) => {\n              return (\n                <option key={item._id} value={item._id}>\n                  {item.title}\n                </option>\n              );\n            })}\n          </TextField>\n          <Button\n            onClick={() => handlePostComment(patients._id)}\n            className={classes.buttonAdd}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Добавить\n          </Button>\n        </div>\n      </div>\n      <div>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>№</TableCell>\n              <TableCell>Статус обращения</TableCell>\n              <TableCell>Комментарий</TableCell>\n              <TableCell>Изменить</TableCell>\n            </TableRow>\n          </TableHead>\n          {comments.map((item, index) => {\n            const element = status.find((elem) => elem._id === item.status);\n            return (\n              <TableBody key={item._id}>\n                <TableRow>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell bgColor={element?.color}>\n                    {dayjs(comments[index].lastComment?.updatedAt).format(\n                      \"DD.MM.YYYY HH:mm\"\n                    )}\n                    <h4>{element?.title}</h4>\n                  </TableCell>\n                  <TableCell>{item.text}</TableCell>\n                  <TableCell>\n                    <PatchComment comments={item}/>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            );\n          })}\n        </Table>\n      </div>\n\n      {/*{comments.map((item) => {*/}\n      {/*  return (*/}\n      {/*    <div className={classes.divTable}>*/}\n      {/*      <div>{item.title}</div>*/}\n      {/*      <div>{item.text}</div>*/}\n      {/*      <div>*/}\n      {/*        <button className={classes.commentBtn}>*/}\n      {/*          <HiPencilAlt />*/}\n      {/*        </button>*/}\n      {/*      </div>*/}\n      {/*    </div>*/}\n      {/*  );*/}\n      {/*})}*/}\n    </main>\n  );\n}\n\nexport default PatientId;\n","import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { BsSquareFill } from \"react-icons/all\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadStatus } from \"../../../redux/features/statuses\";\nimport { loadPatients } from \"../../../redux/features/patients\";\nimport Preloader from \"../../Preloader/preloader\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginTop: 100,\n    width: 800,\n    margin: \"auto\",\n  },\n\n  img: {\n    width: 70,\n    height: 50,\n    borderRadius: 100,\n    // border: 3, solid, green,\n  },\n}));\n\nfunction FilterPatient(props) {\n\n  const classes = useStyles()\n  const dispatch = useDispatch();\n\n  const patients = useSelector((state) => state.patients.items);\n  const loading = useSelector((state) => state.patients.loading);\n\n  const status = useSelector((state) => state.statuses.items);\n\n  useEffect(() => {\n    dispatch(loadStatus());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(loadPatients());\n  }, [dispatch]);\n\n  if (loading) {\n    return <Preloader />;\n  }\n\n  return (\n    <main className={classes.main}>\n      <NavLink to=\"/filterPatient\">Показать фильтр</NavLink>\n\n      <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell> </TableCell>\n              <TableCell align=\"right\">ФИО</TableCell>\n              <TableCell align=\"right\">Последнее изменение</TableCell>\n              <TableCell align=\"right\">Статус</TableCell>\n              <TableCell align=\"right\">Количество записей</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patients.map((item, index) => {\n              console.log(patients);\n              const element = status.find(\n                (stat) => stat._id === item.lastComment?.status\n              );\n              return (\n                <TableRow key={item._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img\n                      className={classes.img}\n                      src={`${item.pathToImage}`}\n                      alt=\"logo\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <NavLink to={`/patient/${item._id}`}>{item.name}</NavLink>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {dayjs(patients[index].lastComment?.updatedAt).format(\n                      \"DD.MM.YYYY HH:mm\"\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {patients[index].comments.length > 0 ? (\n                      <div bgColor={element.color}>\n                        <BsSquareFill color={element?.color} />\n                        {element?.title}\n                      </div>\n                    ) : (\n                      \"нет заметок\"\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">{item.comments.length}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </main>\n  );\n}\n\nexport default FilterPatient;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Patients from './container/Patients';\nimport { makeStyles } from '@material-ui/core';\nimport AboutUs from './container/AboutUs';\nimport Admin from './container/Admin';\nimport Status from './container/Status';\nimport PatientId from './container/PatientId';\nimport FilterPatient from './container/FilterPatient';\n\nconst useStyles = makeStyles((theme)=>({\n  main: {\n    marginTop: 100\n  }\n}))\n\n\nfunction Main(props) {\n  const classes = useStyles()\n\n  return (\n    <main className={classes.main} >\n\n      <Route exact path='/'>\n        <Patients />\n      </Route>\n\n      <Route exact path='/aboutUs'>\n        <AboutUs />\n      </Route>\n\n      <Route exact path='/admin'>\n        <Admin />\n      </Route>\n\n      <Route exact path='/status'>\n        <Status />\n      </Route>\n\n      <Route exact path='/patient/:id'>\n        <PatientId />\n      </Route>\n\n      <Route exaxt path='filterPatient'>\n        <FilterPatient/>\n      </Route>\n\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport Footer from './Footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n  </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport patientsReducer from './features/patients';\r\nimport commentReducer from './features/comments';\r\nimport statusesReducer from './features/statuses'\r\n\r\n\r\n\r\n\r\nconst logger = createLogger({\r\n  diff: true,\r\n  collapsed: true\r\n})\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    patients: patientsReducer,\r\n    comments: commentReducer,\r\n    statuses: statusesReducer\r\n  }),\r\n  applyMiddleware(thunk,logger)\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/configureStore';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}